---
- hosts: all
  sudo: yes
  user: vagrant
  vars:
    - rbenv_root: ~/.rbenv
    - ruby_version: 2.3.0

  tasks:
    - name: Add Nginx Repository
      apt_repository: repo='ppa:nginx/stable' state=present
      register: ppainstalled

    - name: Install Nginx
      apt: pkg=nginx state=latest update_cache=true
      when: ppainstalled|success
      notify:
      - Start Nginx

    - name: Add .ssh file to root directory
      shell: touch ~/.ssh

    - name: Install rbenv | Install Build Depends
      apt: pkg={{ item }} state=latest install_recommends=no
      with_items:
        - build-essential
        - git
        - libcurl4-openssl-dev
        - libmysqlclient-dev
        - libreadline-dev
        - libssl-dev 
        - libxml2-dev
        - libxslt1-dev
        - zlib1g-dev

    - name: rbenv | update rbenv repo
      git: repo=https://github.com/rbenv/rbenv.git dest={{ rbenv_root }} version=v0.4.0

    - name: rbenv | add rbenv to path
      file: path=/usr/local/bin/rbenv src={{ rbenv_root }}/bin/rbenv state=link force=yes

    - name: rbenv | add rbenv initialization to profile
      template: src=templates/rbenv.sh.j2 dest=/etc/profile.d/rbenv.sh owner=root group=root mode=0755

    - name: rbenv | check ruby-build installed
      command: test -x /usr/local/bin/ruby-build
      register: rbuild_present
      ignore_errors: yes

    - name: rbenv | create temporary directory
      command: mktemp -d
      register: tempdir
      when: rbuild_present|failed

    - name: rbenv | clone ruby-build repo
      git: repo=https://github.com/rbenv/ruby-build.git dest={{ tempdir.stdout }}/ruby-build
      when: rbuild_present|failed

    - name: rbenv | install ruby-build
      command: ./install.sh chdir={{ tempdir.stdout }}/ruby-build
      when: rbuild_present|failed

    - name: rbenv | remove temporary directory
      file: path={{ tempdir.stdout }} state=absent
      when: rbuild_present|failed

    - name: rbenv | check ruby {{ ruby_version }} installed
      shell: RBENV_ROOT={{ rbenv_root }} rbenv versions | grep {{ ruby_version }}
      register: ruby_installed
      ignore_errors: yes

    - name: rbenv | install ruby {{ ruby_version }}
      shell: RBENV_ROOT={{ rbenv_root }} rbenv install {{ ruby_version }}
      when: ruby_installed|failed

    - name: rbenv | set global ruby {{ ruby_version }}
      shell: RBENV_ROOT={{ rbenv_root }} rbenv global {{ ruby_version }}
      when: ruby_installed|failed

    - name: rbenv | rehash
      shell: RBENV_ROOT={{ rbenv_root }} rbenv rehash
      when: ruby_installed|failed

    - name: rbenv | set gemrc
      copy: src=files/gemrc dest=/root/.gemrc owner=root group=root mode=0644

    - name: Install Postgres
      apt: pkg=postgresql state=latest update_cache=true

    - name: rubygems | install bundler
      shell: gem install bundler

    - name: rubygems | install rails
      shell: gem install rails

  handlers:
     - name: Start Nginx
       service: name=nginx state=started